{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jaidharosenblatt/Desktop/TutorEDU/frontend/gui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jaidharosenblatt/Desktop/TutorEDU/frontend/gui/src/AppointmentCard.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  height: 40px;\\n  width: 125px;\\n  border: 2px solid #EDB7B7;\\n  border-radius: 4px;\\n  font-family: Avenir-Heavy;\\n  font-size: 12px;\\n  color: #C93131;\\n  letter-spacing: 0;\\n  text-align: center;\\n  justifyContent: center;\\n  alignItems: center;\\n  margin: 8px;\\n\\n  :hover {\\n    color: white;\\n    border: 0px;\\n    background-color: #C93131;\\n  }\\n\\n  :image {\\n    flex: 1,\\n    aspectRatio: 1.5,\\n    resizeMode: contain,\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  height: 40px;\\n  width: 125px;\\n  border: 2px solid #D9E2FF;\\n  border-radius: 4px;\\n  font-family: Avenir-Heavy;\\n  font-size: 12px;\\n  color: #1C3A9F;\\n  letter-spacing: 0;\\n  text-align: center;\\n  justifyContent: center;\\n  alignItems: center;\\n  margin: 8px;\\n\\n  :hover {\\n    color: white;\\n    border: 0px;\\n    background-color: #1C3A9F;\\n  }\\n\\n  :image {\\n    flex: 1,\\n    aspectRatio: 1.5,\\n    resizeMode: contain,\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport './styles.css';\nimport styled from 'styled-components';\nimport axios from \"axios\";\nconst SaveButton = styled.button(_templateObject());\nconst CancelButton = styled.button(_templateObject2());\n\nclass AppointmentCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tutor: null,\n      appointment: this.props.appointment,\n      courseName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getCourseNameFromId(this.props.appointment.subject);\n    this.getTutorFromId(this.state.appointment.tutor);\n  }\n\n  getCourseNameFromId(courseID) {\n    axios.get(\"http://127.0.0.1:8000/api/courses/\" + courseID).then(res => this.setState({\n      subjectName: res.data.course_name\n    })).catch(err => console.log(err));\n  }\n\n  getTutorFromId(tutorId) {\n    axios.get(\"/users/\" + tutorId).then(res => {\n      this.setState({\n        tutor: res.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  handleAction(actionType) {\n    var updatedFields;\n\n    if (actionType === \"save\") {\n      updatedFields = {\n        additional_comments: document.getElementById('description').value,\n        availabilities: document.getElementById('availabilities').value\n      };\n    } else if (actionType === \"cancel\") {\n      updatedFields = {\n        is_active: false,\n        status: \"Canceled\"\n      };\n    } else if (actionType === \"confirm\") {\n      updatedFields = {\n        status: \"Confirmed\"\n      };\n    } else if (actionType === \"decline\") {\n      updatedFields = {\n        status: \"Declined\"\n      };\n    }\n\n    console.log(updatedFields);\n    axios.patch(\"/appointments/\" + this.state.appointment.id + \"/\", updatedFields).then(res => {\n      console.log(res);\n      this.setState({\n        appointment: res.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    // Conditionally render appointment status\n    const appointmentStatus = this.state.appointment.status;\n    var statusComponent;\n    var isScheduled = false;\n\n    if (appointmentStatus === \"Canceled\" || appointmentStatus === \"Declined\") {\n      statusComponent = React.createElement(\"p\", {\n        className: \"appointment-status\",\n        style: {\n          \"color\": \"#C93131\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.state.appointment.status.toUpperCase());\n      isScheduled = true;\n    } else if (appointmentStatus === \"Confirmed\") {\n      statusComponent = React.createElement(\"p\", {\n        className: \"appointment-status\",\n        style: {\n          \"color\": \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.state.appointment.status.toUpperCase());\n      isScheduled = true;\n    } else {\n      statusComponent = React.createElement(\"p\", {\n        className: \"appointment-status\",\n        style: {\n          \"color\": \"#898989\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.state.appointment.status.toUpperCase());\n    } // Check if current user is tutor or client for this appointment and render as such\n\n\n    const tutorID = this.state.appointment.tutor;\n    const currentUserID = this.props.currentUserID;\n    var primaryButtonText = \"Save changes\";\n    var secondaryButtonText = \"Cancel Request\";\n    var primaryAction = \"save\";\n    var secondaryAction = \"cancel\";\n    var detailString = \"TUTOR • \" + this.state.subjectName + \" • $\" + (this.state.tutor != null ? this.state.tutor.hourly_rate : \"\") + \"/HOUR\";\n\n    if (tutorID === currentUserID) {\n      primaryButtonText = \"Approve Request\";\n      secondaryButtonText = \"Reject Request\";\n      primaryAction = \"confirm\";\n      secondaryAction = \"decline\";\n      detailString = \"CLIENT • \" + this.state.subjectName;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"appointment-card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"appointment-card-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"appointment-card-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"appointment-card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"appointment-card-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"appointment-card-profpic\",\n      src: this.state.tutor != null ? this.state.tutor.image : null,\n      alt: \"Tutor Profile Pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"appointment-card-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, statusComponent, React.createElement(\"h3\", {\n      className: \"appointment-card-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, this.state.tutor != null ? this.state.tutor.name : \"Loading...\"), React.createElement(\"p\", {\n      className: \"appointment-card-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, detailString)), !isScheduled && React.createElement(\"div\", {\n      className: \"appointment-card-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(CancelButton, {\n      onClick: () => {\n        this.handleAction(secondaryAction);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, secondaryButtonText), React.createElement(SaveButton, {\n      onClick: () => {\n        this.handleAction(primaryAction);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, primaryButtonText)), React.createElement(\"div\", {\n      className: \"appointment-card-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"appointment-card-info-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"schedule-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Additional Information\"), React.createElement(\"textarea\", {\n      className: \"textarea-input-box\",\n      id: \"description\",\n      type: \"text\",\n      defaultValue: this.state.appointment.additional_comments,\n      placeholder: \"Midterm test prep on integrals...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"appointment-card-info-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"schedule-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Availabilities\"), React.createElement(\"input\", {\n      className: \"text-input-box\",\n      id: \"availabilities\",\n      type: \"text\",\n      defaultValue: this.state.appointment.availabilities,\n      placeholder: \"Friday 10am-2pm...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default AppointmentCard;","map":{"version":3,"sources":["/Users/jaidharosenblatt/Desktop/TutorEDU/frontend/gui/src/AppointmentCard.js"],"names":["React","Component","styled","axios","SaveButton","button","CancelButton","AppointmentCard","constructor","props","state","tutor","appointment","courseName","componentDidMount","getCourseNameFromId","subject","getTutorFromId","courseID","get","then","res","setState","subjectName","data","course_name","catch","err","console","log","tutorId","handleAction","actionType","updatedFields","additional_comments","document","getElementById","value","availabilities","is_active","status","patch","id","render","appointmentStatus","statusComponent","isScheduled","toUpperCase","tutorID","currentUserID","primaryButtonText","secondaryButtonText","primaryAction","secondaryAction","detailString","hourly_rate","image","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport styled from 'styled-components';\nimport axios from \"axios\";\n\nconst SaveButton = styled.button`\n  height: 40px;\n  width: 125px;\n  border: 2px solid #D9E2FF;\n  border-radius: 4px;\n  font-family: Avenir-Heavy;\n  font-size: 12px;\n  color: #1C3A9F;\n  letter-spacing: 0;\n  text-align: center;\n  justifyContent: center;\n  alignItems: center;\n  margin: 8px;\n\n  :hover {\n    color: white;\n    border: 0px;\n    background-color: #1C3A9F;\n  }\n\n  :image {\n    flex: 1,\n    aspectRatio: 1.5,\n    resizeMode: contain,\n  }\n`;\n\nconst CancelButton = styled.button`\n  height: 40px;\n  width: 125px;\n  border: 2px solid #EDB7B7;\n  border-radius: 4px;\n  font-family: Avenir-Heavy;\n  font-size: 12px;\n  color: #C93131;\n  letter-spacing: 0;\n  text-align: center;\n  justifyContent: center;\n  alignItems: center;\n  margin: 8px;\n\n  :hover {\n    color: white;\n    border: 0px;\n    background-color: #C93131;\n  }\n\n  :image {\n    flex: 1,\n    aspectRatio: 1.5,\n    resizeMode: contain,\n  }\n`;\n\nclass AppointmentCard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tutor: null,\n      appointment: this.props.appointment,\n      courseName: \"\",\n    };\n\n  }\n\n  componentDidMount() {\n    this.getCourseNameFromId(this.props.appointment.subject)\n    this.getTutorFromId(this.state.appointment.tutor)\n  }\n\n  getCourseNameFromId(courseID) {\n    axios\n      .get(\"http://127.0.0.1:8000/api/courses/\" + courseID)\n      .then(res => this.setState({ subjectName: res.data.course_name }))\n      .catch(err => console.log(err));\n  }\n\n  getTutorFromId(tutorId) {\n    axios\n      .get(\"/users/\" + tutorId)\n      .then(res => {\n        this.setState({ tutor: res.data })\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleAction(actionType) {\n\n    var updatedFields;\n\n    if (actionType === \"save\") {\n      updatedFields = {\n        additional_comments: document.getElementById('description').value,\n        availabilities: document.getElementById('availabilities').value,\n      }\n    } else if (actionType === \"cancel\") {\n      updatedFields = {\n        is_active: false,\n        status: \"Canceled\"\n      }\n    } else if (actionType === \"confirm\") {\n      updatedFields = {\n        status: \"Confirmed\"\n      }\n    } else if (actionType === \"decline\") {\n      updatedFields = {\n        status: \"Declined\"\n      }\n    }\n\n    console.log(updatedFields)\n\n    axios\n      .patch(\"/appointments/\" + this.state.appointment.id + \"/\", updatedFields)\n      .then(res => {\n        console.log(res)\n        this.setState({ appointment: res.data })\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n\n    // Conditionally render appointment status\n    const appointmentStatus = this.state.appointment.status\n    var statusComponent;\n    var isScheduled = false;\n\n    if (appointmentStatus === \"Canceled\" || appointmentStatus === \"Declined\") {\n      statusComponent = <p className=\"appointment-status\" style={{\"color\": \"#C93131\"}}>{ this.state.appointment.status.toUpperCase() }</p>\n      isScheduled = true;\n    } else if (appointmentStatus === \"Confirmed\"){\n      statusComponent = <p className=\"appointment-status\" style={{\"color\": \"green\"}}>{ this.state.appointment.status.toUpperCase() }</p>\n      isScheduled = true;\n    } else {\n      statusComponent = <p className=\"appointment-status\" style={{\"color\": \"#898989\"}}>{ this.state.appointment.status.toUpperCase() }</p>\n    }\n\n    // Check if current user is tutor or client for this appointment and render as such\n    const tutorID = this.state.appointment.tutor\n    const currentUserID = this.props.currentUserID\n    var primaryButtonText = \"Save changes\"\n    var secondaryButtonText = \"Cancel Request\"\n    var primaryAction = \"save\"\n    var secondaryAction = \"cancel\"\n    var detailString = \"TUTOR • \" + this.state.subjectName + \" • $\" + (this.state.tutor != null ? this.state.tutor.hourly_rate : \"\") + \"/HOUR\"\n\n    if (tutorID === currentUserID) {\n      primaryButtonText = \"Approve Request\"\n      secondaryButtonText = \"Reject Request\"\n      primaryAction = \"confirm\"\n      secondaryAction = \"decline\"\n      detailString = \"CLIENT • \" + this.state.subjectName\n    }\n\n    return (\n      <div className=\"appointment-card-container\">\n        <div className=\"appointment-card-card\">\n          <div className=\"appointment-card-left\">\n            <div className=\"appointment-card-text\">\n              <div className=\"appointment-card-left\">\n                <img className=\"appointment-card-profpic\" src={ this.state.tutor != null ? this.state.tutor.image : null } alt=\"Tutor Profile Pic\"/>\n              </div>\n              <div className=\"appointment-card-left\">\n                { statusComponent }\n                <h3 className=\"appointment-card-name\">{ this.state.tutor != null ? this.state.tutor.name : \"Loading...\" }</h3>\n                <p className=\"appointment-card-details\">{ detailString }</p>\n              </div>\n              { !isScheduled &&\n                <div className=\"appointment-card-right\">\n                  <CancelButton onClick={() => {this.handleAction(secondaryAction)}}>{ secondaryButtonText }</CancelButton>\n                  <SaveButton onClick={() => {this.handleAction(primaryAction)}}>{ primaryButtonText }</SaveButton>\n                </div>\n              }\n              <div className=\"appointment-card-info\">\n                <div className=\"appointment-card-info-left\">\n                  <p className=\"schedule-input\">Additional Information</p>\n                  <textarea className=\"textarea-input-box\" id=\"description\" type=\"text\" defaultValue={this.state.appointment.additional_comments} placeholder=\"Midterm test prep on integrals...\"></textarea>\n                </div>\n                <div className=\"appointment-card-info-right\">\n                  <p className=\"schedule-input\">Availabilities</p>\n                  <input className=\"text-input-box\" id=\"availabilities\" type=\"text\" defaultValue={this.state.appointment.availabilities} placeholder=\"Friday 10am-2pm...\"></input>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AppointmentCard;\n"]},"metadata":{},"sourceType":"module"}